% Inicializacion
tic
clc; clear all; close all; warning off % Inicializacion
ts = 1/30;       
tfin =30;     
t = 0:ts:tfin;

%% Inicializa Nodo ROS
rosshutdown
setenv('ROS_MASTER_URI','http://192.168.88.233:11311')
setenv('ROS_IP','192.168.88.235')
rosinit

%% CONSTANTS VALUES OF THE ROBOT
a = 0.0; 
b = 0.0;
c = 0.0;
L = [a, b, c];

%% 1) PUBLISHER TOPICS & MSG ROS - UAV M100

[velControl_topic,velControl_msg] = rospublisher('/m100/velocityControl','geometry_msgs/Twist');
u_ref = [0.0, 0.0, 0.0, 0.0];
send_velocities(velControl_topic, velControl_msg, u_ref);

%% 2) Suscriber TOPICS & MSG ROS - UAV M100

odomSub = rossubscriber('/dji_sdk/odometry');

[x,euler,x_p,omega] = odometryUAV(odomSub)


h(:,1) = [x(:,1);euler(3,1)];



euler_p(:,1) = [0;0;0]; 

n=1; % Seleccion UAV


w_ref_active = true;
v_ref = Velocities_data(1,t,w_ref_active );

%% Matriz de rotacion

% ul_ref= 0*ones(1,length(t));
% um_ref= 0.5*ones(1,length(t));
% un_ref= 0.0*ones(1,length(t));
% w_ref=  0.0*ones(1,length(t));
%  

v_p(:,1) = [0;0;0];
%% Comienza el programa
for k=1:length(t)
    tic
    
%% SEND VALUES OF CONTROL ROBOT  - UAV M100

    u_ref = [ul_ref(k), um_ref(k), un_ref(k),  w_ref(k)];
    send_velocities(velControl_topic, velControl_msg, u_ref);
    
    %% 3) Odometria del UAV
    
    [x(:,k+1),euler(:,k+1),x_p(:,k+1),omega(:,k+1)] = odometryUAV(odomSub);
    
    h(:,k+1) = [x(:,k+1);euler(3,k+1)];
    
    psi = Angulo(h(4,k+1));
      
    W = [1 sin(euler(1,k+1))*tan(euler(2,k+1)) cos(euler(1,k+1))*tan(euler(2,k+1));...
        0 cos(euler(1,k+1)) sin(euler(1,k+1));...
        0 sin(euler(1,k+1))/cos(euler(2,k+1)) cos(euler(1,k+1))/cos(euler(2,k+1))];
 
    euler_p(:,k+1) = W*omega(:,k+1); 

    R = Rot_zyx(euler(:,k+1));

    
    v(:,k+1) = inv(R)*x_p(:,k+1);
                     
    while toc<ts
    end
    
% 3) Tiempo de mÃ¡quina   
     dt(k) = toc;
 

end
%%



u_ref = [0, 0, 0, 0];
send_velocities(velControl_topic, velControl_msg, u_ref);

save("M100_ident.mat","euler","euler_p","v","ts","omega","t","ul_ref","um_ref","un_ref","w_ref")

%%
close all

subplot(4,1,1)
plot(ul_ref);hold on
plot(v(1,:));hold on
plot(v_p(1,:));
legend("ul_r","ul","ulp");

subplot(4,1,2)
plot(um_ref);hold on
plot(v(2,:));hold on
plot(v_p(2,:));
legend("um","um","ump");

subplot(4,1,3)
plot(un_ref);hold on
plot(v(3,:));hold on
plot(v_p(3,:));
legend("um","um","ump");

subplot(4,1,4)
plot(w_ref); hold on
plot(omega(3,:))
legend("w");

%%
% figure(2)
% subplot(4,1,1)
% plot(x(1,:))
% subplot(4,1,2)
% plot(x(2,:))
% subplot(4,1,3)
% plot(x(3,:))

%%
figure(3)
subplot(4,1,1)
plot(euler(1,:))
xlabel("Time");
legend("phi-ROLL");
subplot(4,1,2)
plot(euler(2,:))
legend("theta-PITCH");
subplot(4,1,3)
plot(euler(3,:))
legend("psi-YAW");

%%
figure(4)
subplot(4,1,1)
plot(euler_p(1,:))
xlabel("Time");
legend("phi-ROLL_p");
subplot(4,1,2)
plot(euler_p(2,:))
legend("theta-PITCH_p");
subplot(4,1,3)
plot(euler_p(3,:))
legend("psi-YAW_p");

%%
figure(5)
subplot(4,1,1)
plot(v_p(1,:))
xlabel("Time");
legend("phi-ROLL_p");
subplot(4,1,2)
plot(v_p(2,:))
legend("theta-PITCH_p");
subplot(4,1,3)
plot(v_p(3,:))
legend("psi-YAW_p");



%% SAVE DATA
% save("Test1.mat");

filename = 'Test5.mat';
save(filename)
